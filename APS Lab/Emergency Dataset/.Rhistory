# Plot mileage w.r.t. each class individually
#ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
knitr::opts_chunk$set(echo = TRUE)
df=read.csv("D:\ME\Lab\R\Emergency Dataset\emergency.csv")
pwd
setpwd
setwd("D:/ME/Lab/R/Emergency Dataset")
df=read.csv("emergency.csv")
str(df)
str(df)
factVec=factor(df)
str(df)
nrow(df)
str(df)
nrow(df)
ncol(df)
condition=c('condition')
condition=c('condition')
conditionVec=factor(condition)
condition=c('condition')
conditionVec=factor(condition)
print(condition)
condition=c('condition')
conditionVec=factor(condition)
print(conditionVec)
condition=c('condition')
conditionVec=factor(condition)
contour(conditionVec)
condition=c('condition')
conditionVec=factor(condition)
contrasts(conditionVec)
condition=c('condition')
conditionVec=factor(condition)
print(conditionVec)
contrasts(conditionVec)
condition=c(df.condition)
condition=c(df['condition'])
condition=c(df['condition'])
df=read.csv("emergency.csv")
condition=c(df['condition'])
df=read.csv("emergency.csv")
str(df)
condition=c(df['condition'])
condition=c(df['Condition'])
conditionVec=factor(condition)
levels(conditionVec)
contrasts(conditionVec)
condition=c(df['Condition'])
conditionVec=factor(condition)
levels(conditionVec)
column_levels=levels(data$Condition)
condition=c(df['Condition'])
conditionVec=factor(condition)
levels(conditionVec)
column_levels=levels(condition)
column_levels=levels(condition)
column_levels=levels(condition)
num_levels <- length(column_levels)
column_levels=levels(condition)
num_levels <- length(column_levels)
cat("Number of levels in the column:", num_levels, "\n")
column_contrasts <- contrasts(condition)
if (is.factor(data$Condition)) {
num_levels_condition <- length(levels(data$Condition))
cat("Number of levels in Condition:", num_levels_condition, "\n")
} else {
cat("Condition is not a factor.\n")
}
if (is.factor(condition)) {
num_levels_condition <- length(levels(data$Condition))
cat("Number of levels in Condition:", num_levels_condition, "\n")
} else {
cat("Condition is not a factor.\n")
}
str(df)
nrow(df)
ncol(df)
condition=c(df['Condition'])
conditionVec=factor(condition)
insured=c(df['Insurance'])
insureanceVec=factor(insured)
if (is.factor(data$Insured)) {
num_levels_insured <- length(levels(data$Insured))
cat("Number of levels in Insured:", num_levels_insured, "\n")
} else {
cat("Insured is not a factor.\n")
}
if (is.factor(insured)) {
num_levels_insured <- length(levels(data$Insured))
cat("Number of levels in Insured:", num_levels_insured, "\n")
} else {
cat("Insured is not a factor.\n")
}
cat("Condition is not a factor.\n")
cat("Insured is not a factor.\n")
if (is.factor(condition)) {
condition_levels <- levels(condition)
num_levels_condition <- length(condition_levels)
cat("Number of levels in the 'Condition' feature:", num_levels_condition, "\n")
}
is.factor(condition)
condition_contrasts <- contrasts(condition)
df['Condition'] <- factor(df['Condition'])
df['Condition'] <- as.factor(df['Condition'])
df['Condition'] <- as.factor(df['Condition'])
df['Condition'] <- factor(df['Condition'])
if (is.factor(insured)) {
num_levels_insured <- length(levels(insured))
cat("Number of levels in insured:", num_levels_insured, "\n")
} else {
cat("Insured is not a factor.\n")
}
condition=c(df['Condition'])
conditionVec=factor(condition)
levels(condition)
insured=c(df['Insurance'])
insureanceVec=factor(insured)
levels(insured)
condition=c(df['Condition'])
conditionVec=factor(condition)
levels(conditionVec)
condition=c(df['Condition'])
conditionVec=factor(condition)
levels(condition)
condition=c(df['Condition'])
conditionVec=factor(condition)
levels(conditionVec)
insured=c(df['Insurance'])
insureanceVec=factor(insured)
levels(insureanceVec)
if (is.factor(conditionVec)) {
num_levels_condition <- length(levels(conditionVec))
cat("Number of levels in Condition:", num_levels_condition, "\n")
} else {
cat("Condition is not a factor.\n")
}
if (is.factor(insureanceVec)) {
num_levels_insured <- length(levels(insureanceVec))
cat("Number of levels in insured:", num_levels_insured, "\n")
} else {
cat("Insured is not a factor.\n")
}
if (is.factor(insureanceVec)) {
num_levels_insured <- length(levels(insureanceVec))
cat("Number of levels in insured:", num_levels_insured, "\n")
} else {
cat("Insured is not a factor.\n")
}
levels(insureanceVec)
df=read.csv("emergency.csv",stringsAsFactors = TRUE,row.names = 1)
str(df)
```{r}
nrow(df)
ncol(df)
condition=c(df['Condition'])
conditionVec=factor(,condition)
levels(conditionVec)
condition=c(df['Condition'])
conditionVec=factor(,condition)
print(conditionVec)
contrasts(conditionVec)
condition=c(df$Condition)
conditionVec=factor(,condition)
condition=c(df$Condition)
conditionVec=factor(condition)
print(conditionVec)
contrasts(conditionVec)
insured=c(df['Insurance'])
insureanceVec=factor(insured)
levels(insureanceVec)
str(insured)
df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
#stringsAsFactors will convert column strings to factor, default false
str(df)
df$Condition=factor(df$Condition)
contrasts(df$Condition)
df=read.csv("emergency.csv", stringsAsFactors = TRUE,row.names = 1)
#stringsAsFactors will convert column strings to factor, default false
str(df)
df$Condition=factor(df$Condition)
contrasts(df$Condition)
df$Insurance=as.factor(df$Insurance)
contrasts(df$Insurance)
str(df$Condition)
contrasts(df$Condition)
str(df$Condition)
df$Condition=factor(df$Condition)
contrasts(df$Condition)
str(df$Insurance)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(data[,categorical_cols,as.factor()])
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(data[,categorical_cols,as.factor])
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
data[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
dfPatient[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
str(data)
str(dfPatient)
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
str(dfPatient)
#this part is important to convert column of strings to column of vector
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
dfPatient[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
str(dfPatient)
levels(dfPatient$Condition)
levels(dfPatient$Insurance)
contrasts(dfPatient$Condition)
contrasts(dfPatient$Insurance)
dfPatient$Condition=='serious'
count.fields(dfPatient$Condition=='serious')
sum(dfPatient$Condition=='serious')
mean(dfPatient$Condition=='serious')
mean(dfPatient$Condition=='serious')*100
sum(dfPatient$Condition=='serious')
sum(dfPatient$Condition=='serious')
sum(dfPatient$Condition=='serious')
print(mean(dfPatient$Condition=='serious')*100)
print(mean(dfPatient$Condition=='serious')*100)
mean(dfPatient$Condition=='serious')*100
mean(dfPatient$Condition=='good')*100
mean(dfPatient$Condition=='fair')*100
mean(dfPatient$Insurance=='insured')*100
mean(dfPatient$Insurance=='not insured')*100
sum(dfPatient$Insurance)
mean(dfPatient$Insurance=='insured' && dfPatient$Condition='serious')*100
mean((dfPatient$Insurance=='insured') && (dfPatient$Condition='serious')*100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100
mean(dfPatient$Condition == 'serious' && dfPatient$Insurance == 'insured') * 100
mean((dfPatient$Condition == 'serious') && (dfPatient$Insurance == 'insured') * 100
mean((dfPatient$Condition == 'serious') & (dfPatient$Insurance == 'insured') * 100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100
mean( dfPatient$Insurance == 'insured' & dfPatient$Condition == 'serious' ) * 100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100
mean( dfPatient$Insurance == 'insured' & dfPatient$Condition == 'serious' ) * 100
dfPatient$Insurance=='insured'
dfPatient[, dfPatient$Insurance=='insured']
dfPatient[ dfPatient$Insurance=='insured']
dfPatient[ dfPatient$Insurance=='insured',]
dfPatient[dfPatient$Condition='serious']
dfPatient[dfPatient$Condition='serious',]
dfPatient[dfPatient$Condition=='serious',]
mean(dfPatient[ dfPatient$Insurance=='insured',]$Condition=='serious')*100
mean(dfPatient[dfPatient$Condition=='serious',]$Insurance=='insured')*100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100/mean(dfPatient$Insurance='insured')*100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100/mean(dfPatient$Insurance='insured')
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100/mean(dfPatient$Insurance=='insured')
knitr::opts_chunk$set(echo = TRUE)
df=read.csv("emergency.csv", stringsAsFactors = TRUE,row.names = 1)
#stringsAsFactors will convert column strings to factor, default false
str(df)
nrow(df)
ncol(df)
df$Condition=factor(df$Condition)
contrasts(df$Condition)
str(df$Condition)
df$Insurance=as.factor(df$Insurance)
contrasts(df$Insurance)
str(df$Insurance)
#this part is important to convert column of strings to column of vector
dfPatient= df=read.csv("emergency.csv", stringsAsFactors = FALSE,row.names = 1)
categorical_cols=c('Condition','Insurance')
dfPatient[,categorical_cols]=lapply(dfPatient[,categorical_cols],as.factor)
str(dfPatient)
levels(dfPatient$Condition)
levels(dfPatient$Insurance)
contrasts(dfPatient$Condition)
contrasts(dfPatient$Insurance)
dfPatient$Condition=='serious'
print(sum(dfPatient$Condition=='serious'))
print(mean(dfPatient$Condition=='serious')*100)
mean(dfPatient$Condition=='good')*100
mean(dfPatient$Condition=='fair')*100
mean(dfPatient$Insurance=='insured')*100
mean(dfPatient$Insurance=='not insured')*100
mean( dfPatient$Insurance == 'insured' & dfPatient$Condition == 'serious' ) * 100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100
mean(dfPatient[ dfPatient$Insurance=='insured',]$Condition=='serious')*100
mean(dfPatient[dfPatient$Condition=='serious',]$Insurance=='insured')*100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100/mean(dfPatient$Insurance=='insured')
mean(dfPatient[ dfPatient$Insurance=='insured',]$Condition=='serious')*100
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100/mean(dfPatient$Condition='serious')
mean(dfPatient$Condition == 'serious' & dfPatient$Insurance == 'insured') * 100/mean(dfPatient$Condition=='serious')
install_tinytex()
mean(dfPatient$Insurance=='insured')*100
