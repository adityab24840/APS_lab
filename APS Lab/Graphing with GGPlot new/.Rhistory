# Chunk 1
library(ggplot2)
# Chunk 2
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
# Chunk 3
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = disp, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) +
geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
# Chunk 4
# Map aesthetics to variables
# Map the color aesthetic to the class variable
p2 = ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy))
p2
# Chunk 5
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) +
geom_point(aes(x = displ, y = hwy))
p3
# Chunk 6
# Set aesthetic manually
# Mark the points blue in color, square in shape, and fixed size
p4 = ggplot(data = mpgData) +
geom_point(aes(x = displ, y = hwy))
p4
# Chunk 7
# Add additional variables using facets
# Plot mileage w.r.t. each class individually
ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
pwd
setwd("D:/ME/Lab/R/Graphing with GGPlot new")
library(ggplot2)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
str(mpgData)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData)
str(mpgData)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData,25)
str(mpgData)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
str(mpgData)
ggplot()
ggplot(mpgData)
ggplot(data=mpgData)
ggplot(data = mpgData, aes(x = disp, y = hwy))
ggplot(data = mpgData, aes(x = displ, y = hwy))
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_count()
ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_bar()
ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_curve()
ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_jitter()
ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point() + geom_count()
ggplot(data = mpgData, aes(x = displ, y = hwy))  geom_count()
ggplot(data = mpgData, aes(x = displ, y = hwy))  + geom_count()
ggplot(data = mpgData, aes(x = displ, y = hwy))  + geom_count()
ggplot(data = mpgData, aes(x = displ, y = hwy))  geom_point(\)
ggplot(data = mpgData, aes(x = displ, y = hwy))  geom_point()
ggplot(data = mpgData, aes(x = displ, y = hwy))  + geom_point()
ggplot(data = mpgData, aes(x = displ, y = hwy))  + geom_point(alpha = 1/10)
ggplot(data = mpgData, aes(x = displ, y = hwy))  + geom_point(alpha = 1/30)
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
ggplot()
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
dfBodyFat=read.csv('bodyfat.csv')
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
Weight
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight)+ geom_point()
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight)+ geom_point()
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight)+ geom_point()
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight)+ geom_point())
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight)+ geom_point())
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1=plot1+ geom_point()
plot1=plot1+labs(x = 'BodyFat', y = 'Weight ', title = 'BodyFat v/s Weight')
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1=plot1+ geom_point()
plot1=plot1+labs(x = 'BodyFat', y = 'Weight ', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1=plot1+ geom_point(alpha(1/10))
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1=plot1+ geom_point()
plot1=plot1+labs(x = 'BodyFat', y = 'Weight ', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1=plot1+ geom_point()
plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1=plot1+ geom_point()
plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 <- ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE, color = 'blue') +  # Adding the regression line
labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
plot1=plot1+ geom_point()
plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 <- ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight)) +
geom_point() +
geom_smooth(method = 'lm', se = TRUE, color = 'blue') +  # Adding the regression line
labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
plot1 <- ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight)) +
geom_point() +
geom_smooth(method = 'lm', se = TRUE, color = 'blue') +  # Adding the regression line
labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
#plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
#plot1=plot1+ geom_point()
#plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 = ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight)) + geom_point() + geom_smooth(method = 'lm', se = True, color = 'blue') +labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
#plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
#plot1=plot1+ geom_point()
#plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 = ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight)) + geom_point() + geom_smooth(method = 'lm', se = TRUE, color = 'blue') +labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
#plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
#plot1=plot1+ geom_point()
#plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 = ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight, color=Gender)) + geom_point() + geom_smooth(method = 'lm', se = TRUE, color = 'blue') +labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
#plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
#plot1=plot1+ geom_point()
#plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 = ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight, color=Gender)) + geom_point() + geom_smooth(method = 'gam', se = TRUE, color = 'blue') +labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
#plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
#plot1=plot1+ geom_point()
#plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 = ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight, color=Gender)) + geom_point() + geom_smooth( color = 'blue') +labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
#plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
#plot1=plot1+ geom_point()
#plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 = ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight, color=Gender)) + geom_point() + geom_smooth(method = 'lm', se = TRUE, color = 'blue') +labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) + geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
# Map aesthetics to variables
# Map the color aesthetic to the class variable
p2 = ggplot(data = mpgData) + geom_point(mapping = aes(x = displ, y = hwy, color=class))
p2
# Map aesthetics to variables
# Map the color aesthetic to the class variable
#p2 = ggplot(data = mpgData) + geom_point(mapping = aes(x = displ, y = hwy, color=class))
p2=p1+color=class
# Map aesthetics to variables
# Map the color aesthetic to the class variable
#p2 = ggplot(data = mpgData) + geom_point(mapping = aes(x = displ, y = hwy, color=class))
p2=p1+color=class
# Map aesthetics to variables
# Map the color aesthetic to the class variable
p2 = ggplot(data = mpgData) + geom_point(mapping = aes(x = displ, y = hwy, color=class))
p2
dfBodyFat=read.csv('bodyfat.csv')
head(dfBodyFat,5)
#plot1=ggplot(dfBodyFat,aes(x=Bodyfat ,y=Weight))
#plot1=plot1+ geom_point()
#plot1=plot1+labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1 = ggplot(dfBodyFat, aes(x = Bodyfat, y = Weight, color=Gender)) + geom_point() + geom_smooth(method = 'lm', se = TRUE, color = 'blue') +labs(x = 'BodyFat(%)', y = 'Weight(KG)', title = 'BodyFat v/s Weight')
plot1
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=alpha))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=alpha(1/10)))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class(alpha(1/10)))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class, color=class()))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class()))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class))
p3
# Set aesthetic manually
# Mark the points blue in color, square in shape, and fixed size
p4 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy))
p4
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=class))
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class))
p3
# Map aesthetics to variables
# Map the color aesthetic to the class variable
p2 = ggplot(data = mpgData) + geom_point(mapping = aes(x = displ, y = hwy, color=class))+labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p2
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class))+labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class, size=.8))+labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class, size=.5))+labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class, size=.1))+labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class, size=0.1))+labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p3
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) + geom_point(aes(x = displ, y = hwy,shape=drv,color=class))+labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p3
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_point(aes(x = class, y = hwy))+labs(y = 'Displacement (litres)', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class')
# Plot mileage w.r.t. each class individually
ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_point(aes(x = class, y = hwy))+labs(y = 'Displacement (litres)', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class')
p5
# Plot mileage w.r.t. each class individually
#ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_boxplot(aes(x = class, y = hwy))+labs(y = 'Displacement (litres)', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class')
p5
# Plot mileage w.r.t. each class individually
#ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_boxplot(aes(x = class, y = hwy))+labs(y = 'Mileage ', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class')
p5
# Plot mileage w.r.t. each class individually
#ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_boxplot(aes(x = class, y = hwy))+labs(y = 'Mileage ', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class',color=class)
p5
# Plot mileage w.r.t. each class individually
#ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_boxplot(aes(x = class, y = hwy))+labs(y = 'Mileage ', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class',color=mileage)
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_boxplot(aes(x = class, y = hwy))+labs(y = 'Mileage ', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class',color=hwy)
# Add additional variables using facets
p5 = ggplot(data = mpgData) + geom_boxplot(aes(x = class, y = hwy))+labs(y = 'Mileage ', x = 'Vehicle Class', title = 'Mileage vs. Vehicle Class')
p5
