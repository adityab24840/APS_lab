setwd("D:/ME/Lab/R")
sum(data)<3
data=c(1,1,1,0,0)
```{r}
mean(data)
apply(simulatedData,2,checkEvent)
mean (apply(simulatedData,2,checkEvent))
#sampling space
s=c(1,0)
#corresponding possibilities
p=matrix(nrow = 5,ncol = 2,
c(0.95,0.95,0.9,0.9,0.8,0.05,.05,.05,.1,.2))
#str(p)
#sample(s,size=10, replace = TRUE,prob = p[5,] )
judgeResult= function(){
result= numeric(5)
for (j in c(1:5)) {
result[j]=sample(s,size = 1,replace = TRUE,prob = p[j,])
}
return(result)
}
replicate(100,judgeResult())
apply(simulatedData,2,checkEvent)
#sampling space
s=c(1,0)
#corresponding possibilities
p=matrix(nrow = 5,ncol = 2,
c(0.95,0.95,0.9,0.9,0.8,0.05,.05,.05,.1,.2))
#str(p)
#sample(s,size=10, replace = TRUE,prob = p[5,] )
judgeResult= function(){
result= numeric(5)
for (j in c(1:4)) {
result[j]=sample(s,size = 1,replace = TRUE,prob = p[j,])
}
result[5]=result[1]
return(result)
}
replicate(100,judgeResult())
#sampling space
s=c(1:365)
#corresponding possibilities
p=matrix(nrow = 12,ncol = 31,
c(1:365))
str(p)
sample(s,size=10, replace = TRUE,prob = p[5,] )
s=c(1:365)
p=matrix (nrow = 12,ncol = 31)
s=c(1:365)
p=matrix (nrow = 12,ncol = 31)
print(p)
s=c(1:365)
p=matrix (nrow = 12,ncol = 31,s)
print(p)
library(ggplot2)
install.packages("learnr")
install.packages("ggplot2")
```{r}
```{r}
library(ggplot2)
---
title: "Graphing Using ggplot Part-1"
library(dplyr)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
?mtcars
data('mtcars.scv')
carData= read.csv('mtcars.csv')
pwd
library(ggplot2)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = disp, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) +
geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
# Map aesthetics to variables
# Map the color aesthetic to the class variable
p2 = ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy))
p2
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) +
geom_point(aes(x = displ, y = hwy))
p3
# Set aesthetic manually
# Mark the points blue in color, square in shape, and fixed size
p4 = ggplot(data = mpgData) +
geom_point(aes(x = displ, y = hwy))
p4
# Add additional variables using facets
# Plot mileage w.r.t. each class individually
ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
setwd("D:/ME/Lab/R/mtCars")
carData=read.csv('mtcars.csv')
ls
install.packages("tidyverse")
# Load the mpg dataset
data('hp')
mpgData = hp
library(ggplot2)
# Load the mpg dataset
data('mpg')
mpgData = mpg
# Print the first five rows (or samples) in the data frame
head(mpgData, 5)
# Initiate the ggplot() function binding to the car data frame
ggplot(data = mpgData)
# Create a plot object
p1 = ggplot(data = mpgData)
# Use the aes() function to specify the aesthetic mapping, that is, which variables
# should be plotted
p1 = ggplot(data = mpgData, aes(x = disp, y = hwy))
# Use the geom_ type functions to add geometric elements
p1 = ggplot(data = mpgData, aes(x = displ, y = hwy)) +
geom_point()
# Add labels and title
p1 = p1 + labs(x = 'Displacement (litres)', y = 'Mileage (MPG)', title = 'Mileage vs. Displacement')
p1
# Map aesthetics to variables
# Map the color aesthetic to the class variable
p2 = ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy))
p2
# Map aesthetics to variables
# Map the size (or alpha or shape) aesthetic to the class variable
p3 = ggplot(data = mpgData) +
geom_point(aes(x = displ, y = hwy))
p3
# Set aesthetic manually
# Mark the points blue in color, square in shape, and fixed size
p4 = ggplot(data = mpgData) +
geom_point(aes(x = displ, y = hwy))
p4
# Add additional variables using facets
# Plot mileage w.r.t. each class individually
ggplot(data = mpgData) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(, nrow = 2)
library(dplyr)
# Load the Motor Trend Car Road Tests (mtcars) dataset
carData = read.csv('mtcars.csv')
#carData = data('mtcars')
# Print the first five rows (or samples) in the data frame
head(carData, 5)
# Print the structure of the data frame
str(carData)
# Print the names of the columns (features or variables)
colnames(carData)
# Print the number of samples (rows) and features (columns) in the data frame
nrow(carData)
ncol(carData)
# Create a vector of categorical columns
categorical_cols = c('vs', 'am')
# Convert the columns to factor type
carData[categorical_cols] = lapply(carData[categorical_cols], as.factor)
# Print the structure of the resulting dataframe
str(carData)
# Select only the feature wt
select()
# Select only the feature wt
select('wt')
# Select only the feature wt
select(wt)
# Select only the feature wt
select(gear)
